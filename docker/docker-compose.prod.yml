services:
  db:
    image: postgres:16-alpine
    container_name: censorly_db
    env_file:
      - ../.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 -p 5432",
        ]
      interval: 5s
      timeout: 5s
      retries: 12

  pgadmin:
    image: dpage/pgadmin4
    container_name: censorly_pgadmin
    env_file:
      - ../.env.prod
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: censorly_redis
    env_file:
      - ../.env.prod
    command: >
      sh -lc 'printf "requirepass %s\nappendonly yes\n" "$${REDIS_PASSWORD}" >
      /usr/local/etc/redis/redis.conf &&
      exec redis-server /usr/local/etc/redis/redis.conf'
    volumes:
      - redisdata:/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: censorly_minio
    command: server /data --console-address ":9101"
    env_file:
      - ../.env.prod
    volumes:
      - miniodata:/data
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    container_name: censorly_api
    env_file:
      - ../.env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    ports:
      - "8100:8000"
    restart: unless-stopped
    command: python -m uvicorn apps.api.main:app --host 0.0.0.0 --port 8000

  web:
    build:
      context: ..
      dockerfile: docker/web.Dockerfile
      args:
        VITE_API_URL: /api
    container_name: censorly_web
    depends_on:
      api:
        condition: service_started
    env_file:
      - ../.env.prod
    ports:
      - "8101:80"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
