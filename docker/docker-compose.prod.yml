services:
  db:
    image: postgres:16-alpine
    container_name: censorly_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # ports: ["55432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: censorly_redis
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]
    # ports: ["6379:6379"]
    volumes:
      - redisdata:/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: censorly_minio
    command: server /data --console-address ":9101"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    # ports:
    #   - "9100:9000"
    #   - "9101:9101"
    volumes:
      - miniodata:/data
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    container_name: censorly_api
    env_file:
      - ../.env.prod
    depends_on:
      - db
      - redis
      - minio
    ports: ["8100:8000"]
    restart: unless-stopped
    command: uvicorn apps.api.main:app --host 0.0.0.0 --port 8000

  web:
    build:
      context: ..
      dockerfile: docker/web.Dockerfile
      args:
        VITE_API_URL: /api
    container_name: censorly_web
    depends_on: [api]
    ports: ["8101:80"]
    restart: unless-stopped

  # worker:
  #   build:
  #     context: ..
  #     dockerfile: docker/worker.Dockerfile
  #   container_name: censorly_worker
  #   env_file:
  #     - ../.env.prod
  #   depends_on:
  #     - db
  #     - redis
  #     - minio
  #   working_dir: /app
  #   command: ["python", "apps/worker/main.py"]
  #   restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  miniodata:
